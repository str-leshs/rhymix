document.addEventListener('DOMContentLoaded', () => {
    initThemeSelection();
    initSaveButton();
    loadSavedDiary();
    const username = document.getElementById("hidden-username")?.value;
    const nickname = document.getElementById("hidden-nickname")?.value;
    console.log("üìå username:", username);
    console.log("üìå nickname:", nickname);

    document.getElementById("imageInput").addEventListener("change", handleImageUpload);

    setTimeout(() => {
        loadSavedTheme();
    }, 0);
});


function initThemeSelection() {
    const themeBoxes = document.querySelectorAll('.theme-box');
    themeBoxes.forEach(box => {
        box.addEventListener('click', () => {
            themeBoxes.forEach(b => b.classList.remove('selected'));
            box.classList.add('selected');
        });
    });
}

function initSaveButton() {
    const saveBtn = document.querySelector('.save-btn');
    if (!saveBtn) return;

    saveBtn.addEventListener('click', () => {
        const selectedBox = document.querySelector('.theme-box.selected');
        if (!selectedBox) {
            Swal.fire({ icon: 'warning', title: 'ÏÑ†ÌÉùÎêú ÌÖåÎßàÍ∞Ä ÏóÜÏäµÎãàÎã§.', text: 'ÌÖåÎßàÎ•º Î®ºÏ†Ä ÏÑ†ÌÉùÌï¥Ï£ºÏÑ∏Ïöî.' });
            return;
        }

        const selectedTheme = selectedBox.dataset.theme;
        if (!selectedTheme) {
            Swal.fire({ icon: 'error', title: 'ÌÖåÎßà Ï†ïÎ≥¥ ÏóÜÏùå', text: 'ÏÑ†ÌÉùÎêú ÌÖåÎßàÏóê Îç∞Ïù¥ÌÑ∞Í∞Ä ÏóÜÏäµÎãàÎã§.' });
            return;
        }

        saveTheme(selectedTheme);
    });
}

function saveTheme(themeName) {
    const username = document.getElementById('hidden-username')?.value;
    const titleEl = document.getElementById('title-input');
    const commentEl = document.getElementById('content-input');
    const imageEl = document.querySelector("#imagePreviewContainer img");
    const saveBtn = document.querySelector(".save-btn");

    const title = titleEl?.value?.trim();
    const comment = commentEl?.innerText?.trim();
    const image = imageEl?.src || "";

    if (!username) {
        Swal.fire({ icon: 'error', title: 'Ï†ÄÏû• Ïã§Ìå®!', text: 'usernameÏù¥ Ï†ïÏùòÎêòÏßÄ ÏïäÏïòÏäµÎãàÎã§.' });
        return;
    }

    // Ï†ÄÏû• Î≤ÑÌäº ÎπÑÌôúÏÑ±Ìôî
    saveBtn.disabled = true;

    // 1Ô∏è‚É£ ÌÖåÎßà Ï†ÄÏû•
    fetch('/api/users/me/theme', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ theme: themeName })
    })
        .then(res => {
            if (!res.ok) throw new Error('ÌÖåÎßà Ï†ÄÏû• Ïã§Ìå®');
            return res.text();
        })
        .then(() => {
            // 2Ô∏è‚É£ Îã§Ïù¥Ïñ¥Î¶¨ Ï†ÄÏû•
            const diaryDto = {
                diaryTitle: title || '(Ï†úÎ™© ÏóÜÏùå)',
                diaryContent: comment || '(ÎÇ¥Ïö© ÏóÜÏùå)',
                diaryImage: image
            };

            return fetch('/api/users/me/diary', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(diaryDto)
            });
        })
        .then(res => {
            if (!res.ok) throw new Error('Îã§Ïù¥Ïñ¥Î¶¨ Ï†ÄÏû• Ïã§Ìå®');
            return res.text();
        })
        .then(() => {
            Swal.fire({
                icon: 'success',
                title: 'ÌÖåÎßàÏôÄ Îã§Ïù¥Ïñ¥Î¶¨Í∞Ä Ï†ÄÏû•ÎêòÏóàÏäµÎãàÎã§!',
                text: 'Î©îÏù∏ ÌéòÏù¥ÏßÄÎ°ú Ïù¥ÎèôÌï©ÎãàÎã§.',
                confirmButtonText: 'ÌôïÏù∏'
            }).then(() => {
                window.location.href = '/main';
            });
        })
        .catch((err) => {
            Swal.fire({ icon: 'error', title: 'Ï†ÄÏû• Ïã§Ìå®!', text: err.message || 'Ï†ÄÏû• Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.' });
        })
        .finally(() => {
            saveBtn.disabled = false; // Ï†ÄÏû• Î≤ÑÌäº Ïû¨ÌôúÏÑ±Ìôî
        });
}

function loadSavedTheme() {
    fetch('/api/auth/me')
        .then(res => {
            if (!res.ok) throw new Error('Ï†ïÎ≥¥ Î∂àÎü¨Ïò§Í∏∞ Ïã§Ìå®');
            return res.json();
        })
        .then(user => {
            const currentTheme = user.selectedTheme;
            if (!currentTheme) return;

            // ‚úÖ Î™®Îì† ÌÖåÎßà Î∞ïÏä§ÏóêÏÑú selected Ï†úÍ±∞
            document.querySelectorAll('.theme-box').forEach(box => {
                box.classList.remove('selected');
            });

            // ‚úÖ Ï†ÄÏû•Îêú ÌÖåÎßàÎßå selected Ï∂îÍ∞Ä
            const currentBox = document.querySelector(`.theme-box[data-theme="${currentTheme}"]`);
            if (currentBox) currentBox.classList.add('selected');
        })
        .catch(err => {
            console.warn("Î∂àÎü¨Ïò§Í∏∞ Ïã§Ìå®:", err);
        });
}


function loadSavedDiary() {
    fetch("/api/users/me/diary")
        .then(res => {
            if (!res.ok) throw new Error("Îã§Ïù¥Ïñ¥Î¶¨ ÏóÜÏùå");
            return res.json();
        })
        .then(diary => {
            const titleInput = document.getElementById("title-input");
            const contentInput = document.getElementById("content-input");
            const previewContainer = document.getElementById("imagePreviewContainer");
            const filenameLabel = document.getElementById("imageFilename");

            if (titleInput) titleInput.value = diary.diaryTitle || "";
            if (contentInput) contentInput.innerText = diary.diaryContent || "";

            // Ïù¥ÎØ∏ÏßÄ ÎØ∏Î¶¨Î≥¥Í∏∞ Î∞òÏòÅ
            if (diary.diaryImage) {
                previewContainer.innerHTML = `<img src="${diary.diaryImage}" style="max-width: 100%; margin-top: 10px; border-radius: 8px;" />`;
                filenameLabel.textContent = "Ïù¥ÎØ∏ ÏóÖÎ°úÎìúÎêú Ïù¥ÎØ∏ÏßÄ";
            }
        })
        .catch(err => {
            console.warn("üìò Îã§Ïù¥Ïñ¥Î¶¨ Î∂àÎü¨Ïò§Í∏∞ Ïã§Ìå®:", err);
        });
}


function handleImageUpload(event) {
    const file = event.target.files[0];
    const filenameLabel = document.getElementById("imageFilename");
    const previewContainer = document.getElementById("imagePreviewContainer");

    if (!file) {
        filenameLabel.textContent = "ÏÑ†ÌÉùÎêú ÌååÏùº ÏóÜÏùå";
        previewContainer.innerHTML = "";
        return;
    }

    // Ïù¥ÎØ∏ÏßÄ ÌòïÏãù Í≤ÄÏÇ¨
    if (!file.type.startsWith("image/")) {
        Swal.fire({ icon: 'error', title: 'Ïù¥ÎØ∏ÏßÄ ÌòïÏãù Ïò§Î•ò', text: 'Ïù¥ÎØ∏ÏßÄ ÌååÏùºÎßå ÏóÖÎ°úÎìú Í∞ÄÎä•Ìï©ÎãàÎã§.' });
        event.target.value = "";
        return;
    }

    // Ïö©Îüâ Ï†úÌïú (1MB Ïù¥Ìïò)
    const maxSize = 1024 * 1024; // 1MB
    if (file.size > maxSize) {
        Swal.fire({ icon: 'warning', title: 'ÌååÏùº ÌÅ¨Í∏∞ Ï¥àÍ≥º', text: 'Ïù¥ÎØ∏ÏßÄ Ïö©ÎüâÏùÄ 1MB Ïù¥ÌïòÎßå Í∞ÄÎä•Ìï©ÎãàÎã§.' });
        event.target.value = "";
        return;
    }

    // ÎØ∏Î¶¨Î≥¥Í∏∞ Î∞è ÌååÏùº Ïù¥Î¶Ñ ÌëúÏãú
    const reader = new FileReader();
    reader.onload = (e) => {
        filenameLabel.textContent = file.name;
        previewContainer.innerHTML = `<img src="${e.target.result}" style="max-width: 100%; margin-top: 10px; border-radius: 8px;" />`;
    };
    reader.readAsDataURL(file);
}
